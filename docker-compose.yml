version: '3'

services:
  # PostgreSQL database service for storing processed transactions
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: frauddb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Airflow Webserver (UI)
  airflow-webserver:
    build: .
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/frauddb
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
      AIRFLOW__WEBSERVER__SECRET_KEY: "my_super_secret_key"   # ðŸ”‘ shared secret
      PYTHONPATH: /opt/airflow
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname admin --lastname user --role Admin --email admin@example.com &&
        exec airflow webserver
      "

  # Airflow Scheduler
  airflow-scheduler:
    build: .
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/frauddb
      AIRFLOW__WEBSERVER__SECRET_KEY: "my_super_secret_key"   # ðŸ”‘ must match webserver
      PYTHONPATH: /opt/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
    command: >
      bash -c "
        airflow db upgrade &&
        exec airflow scheduler
      "

volumes:
  postgres_data:
